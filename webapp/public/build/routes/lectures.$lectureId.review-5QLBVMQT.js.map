{
  "version": 3,
  "sources": ["../../../app/pages/LectureReviewPage.tsx", "../../../app/routes/lectures.$lectureId.review.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/pages/LectureReviewPage.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/pages/LectureReviewPage.tsx\");\n  import.meta.hot.lastModified = \"1744588332794.4387\";\n}\n// REMIX HMR END\n\n// src/pages/LectureReviewPage.tsx\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, Typography, Paper, TextField, Button, CircularProgress, Alert, Box, Chip, Divider } from '@mui/material';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport HourglassTopIcon from '@mui/icons-material/HourglassTop';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport { getLectureDetails, validateSummary } from '../services/api';\nimport { useSnackbar } from 'notistack'; // For nicer alerts\n\nconst LectureReviewPage = () => {\n  _s();\n  const {\n    lectureId\n  } = useParams();\n  const [lecture, setLecture] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [validatedSummary, setValidatedSummary] = useState('');\n  const [isSaving, setIsSaving] = useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar(); // Use notistack\n\n  const fetchLecture = useCallback(async () => {\n    if (!lectureId) {\n      setError(\"Lecture ID is missing.\");\n      setLoading(false);\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const data = await getLectureDetails(lectureId);\n      setLecture(data);\n      // Initialize text field with validated summary if it exists, otherwise AI summary\n      setValidatedSummary(data.is_validated ? data.validated_summary || '' : data.summary || '');\n    } catch (err) {\n      console.error(\"Failed to fetch lecture details:\", err);\n      setError('Failed to load lecture details. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  }, [lectureId]);\n  useEffect(() => {\n    fetchLecture();\n    // Optional: Set up polling or a refresh button if status is IN_PROGRESS\n    // const interval = setInterval(() => {\n    //     if (lecture?.summaryStatus === 'IN_PROGRESS') {\n    //         fetchLecture();\n    //     }\n    // }, 15000); // Poll every 15 seconds\n    // return () => clearInterval(interval);\n  }, [fetchLecture]); // Depend on the memoized fetch function\n\n  const handleSummaryChange = event => {\n    setValidatedSummary(event.target.value);\n  };\n  const handleSaveAndValidate = async () => {\n    if (!lectureId || lecture?.summaryStatus === 'IN_PROGRESS' || lecture?.summaryStatus === 'NOT_STARTED') {\n      enqueueSnackbar('Cannot validate yet, processing not complete.', {\n        variant: 'warning'\n      });\n      return;\n    }\n    setIsSaving(true);\n    try {\n      const updatedLecture = await validateSummary(lectureId, validatedSummary);\n      setLecture(updatedLecture); // Update local state with response\n      setValidatedSummary(updatedLecture.validated_summary || ''); // Ensure field syncs\n      enqueueSnackbar('Summary validated successfully!', {\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(\"Failed to validate summary:\", err);\n      enqueueSnackbar(`Validation failed: ${err.response?.data?.error || err.message || 'Unknown error'}`, {\n        variant: 'error'\n      });\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  const getStatusChip = () => {\n    if (!lecture) return null;\n    if (lecture.is_validated) {\n      return <Chip icon={<CheckCircleIcon />} label=\"Validated\" color=\"success\" />;\n    }\n    switch (lecture.summaryStatus) {\n      case 'COMPLETED':\n        return <Chip icon={<CheckCircleIcon />} label=\"Ready for Review\" color=\"primary\" />;\n      case 'IN_PROGRESS':\n        return <Chip icon={<HourglassTopIcon />} label=\"Processing Audio...\" color=\"warning\" />;\n      case 'VALIDATED':\n        // Fallback\n        return <Chip icon={<CheckCircleIcon />} label=\"Validated\" color=\"success\" />;\n      case 'ERROR':\n        return <Chip icon={<ErrorIcon />} label=\"Processing Error\" color=\"error\" />;\n      case 'NOT_STARTED':\n      default:\n        return <Chip label=\"Pending Upload/Processing\" color=\"default\" />;\n    }\n  };\n  if (loading) {\n    return <Box sx={{\n      display: 'flex',\n      justifyContent: 'center',\n      mt: 5\n    }}><CircularProgress /></Box>;\n  }\n  if (error) {\n    return <Alert severity=\"error\">{error}</Alert>;\n  }\n  if (!lecture) {\n    return <Alert severity=\"warning\">Lecture data not found.</Alert>;\n  }\n  const canValidate = lecture.summaryStatus === 'COMPLETED' || lecture.summaryStatus === 'VALIDATED';\n  return <Container maxWidth=\"md\">\n      <Box sx={{\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      mb: 2\n    }}>\n        <Typography variant=\"h4\" gutterBottom>\n          Review Lecture: {lecture.lectureTitle}\n        </Typography>\n         {getStatusChip()}\n      </Box>\n\n      {lecture.summaryStatus === 'IN_PROGRESS' && <Alert severity=\"info\" sx={{\n      mb: 3\n    }}>\n          Audio is currently processing. Transcript and summary will appear here once complete. You can refresh the page or check back later.\n        </Alert>}\n      {lecture.summaryStatus === 'ERROR' && <Alert severity=\"error\" sx={{\n      mb: 3\n    }}>\n          An error occurred during processing. You may need to re-upload the audio file.\n        </Alert>}\n\n\n      {/* Show content only when processing is done */}\n      {canValidate && <>\n          <Paper elevation={1} sx={{\n        p: 3,\n        mb: 3\n      }}>\n            <Typography variant=\"h6\" gutterBottom>Transcript</Typography>\n            <Box component=\"pre\" // Use pre for preserving whitespace\n        sx={{\n          whiteSpace: 'pre-wrap',\n          // Wrap long lines\n          wordBreak: 'break-word',\n          // Break long words\n          maxHeight: '300px',\n          overflowY: 'auto',\n          bgcolor: 'grey.100',\n          p: 2,\n          borderRadius: 1,\n          fontFamily: 'monospace'\n        }}>\n              {lecture.transcript || 'Transcript not available.'}\n            </Box>\n          </Paper>\n\n          <Divider sx={{\n        my: 3\n      }} />\n\n          <Paper elevation={1} sx={{\n        p: 3,\n        mb: 3\n      }}>\n             <Typography variant=\"h6\" gutterBottom>AI-Generated Summary (Read-only)</Typography>\n              <Typography variant=\"body1\" sx={{\n          color: 'text.secondary',\n          mb: 2,\n          p: 1,\n          border: '1px solid #eee',\n          borderRadius: 1,\n          background: '#f9f9f9'\n        }}>\n                {lecture.summary || 'AI summary not available.'}\n              </Typography>\n\n             <Typography variant=\"h6\" gutterBottom>Instructor Validated Summary</Typography>\n              <TextField label=\"Edit and Validate Summary\" multiline rows={8} fullWidth variant=\"outlined\" value={validatedSummary} onChange={handleSummaryChange} sx={{\n          mb: 2\n        }} disabled={isSaving} // Disable while saving\n        placeholder=\"Review the AI summary above, make corrections here, and then validate.\" />\n              <Button variant=\"contained\" color=\"primary\" onClick={handleSaveAndValidate} disabled={isSaving || lecture.is_validated} // Disable if already validated or saving\n        startIcon={isSaving ? <CircularProgress size={20} color=\"inherit\" /> : lecture.is_validated ? <CheckCircleIcon /> : undefined}>\n                {isSaving ? 'Validating...' : lecture.is_validated ? 'Summary Validated' : 'Save & Validate Summary'}\n              </Button>\n               {lecture.is_validated && <Typography variant=\"caption\" sx={{\n          ml: 2,\n          color: 'success.main'\n        }}>Validated on {new Date(lecture.lastUpdated * 1000).toLocaleString()}</Typography>}\n          </Paper>\n        </>}\n    </Container>;\n};\n_s(LectureReviewPage, \"N8QIu2z4lvfqdo9Fo7NldAjgNiI=\", false, function () {\n  return [useParams, useSnackbar];\n});\n_c = LectureReviewPage;\nexport default LectureReviewPage;\nvar _c;\n$RefreshReg$(_c, \"LectureReviewPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/lectures.$lectureId.review.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/lectures.$lectureId.review.tsx\");\n  import.meta.hot.lastModified = \"1744599720910.4878\";\n}\n// REMIX HMR END\n\nimport LectureReviewPage from '~/pages/LectureReviewPage';\nimport { useAuth } from '~/contexts/AuthContext';\nimport { Navigate } from 'react-router-dom';\nimport { Box, CircularProgress } from '@mui/material';\n\n// Protection within the route component\nexport default function LectureReviewRoute() {\n  _s();\n  const {\n    currentUser,\n    loading\n  } = useAuth();\n  if (loading) {\n    return <Box sx={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '50vh'\n    }}>\n               <CircularProgress />\n           </Box>;\n  }\n  if (!currentUser) {\n    return <Navigate to=\"/login\" replace />;\n  }\n  return <LectureReviewPage />;\n}\n_s(LectureReviewRoute, \"+loUN5XsQVjYs/gtfuWkb9VBZ7Q=\", false, function () {\n  return [useAuth];\n});\n_c = LectureReviewRoute;\nvar _c;\n$RefreshReg$(_c, \"LectureReviewRoute\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "_s", "_c"]
}
