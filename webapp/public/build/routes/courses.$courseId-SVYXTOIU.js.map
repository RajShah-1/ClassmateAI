{
  "version": 3,
  "sources": ["../../../app/pages/CourseDetailsPage.tsx", "../../../app/components/LectureUpload.tsx", "../../../node_modules/@mui/icons-material/esm/UploadFile.js", "../../../node_modules/@mui/icons-material/esm/Audiotrack.js", "../../../node_modules/@mui/icons-material/esm/Pending.js", "../../../app/routes/courses.$courseId.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/pages/CourseDetailsPage.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/pages/CourseDetailsPage.tsx\");\n  import.meta.hot.lastModified = \"1744588300834.2722\";\n}\n// REMIX HMR END\n\n// src/pages/CourseDetailsPage.tsx\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, Link as RouterLink } from 'react-router-dom';\nimport { Container, Typography, CircularProgress, Alert, List, ListItem, ListItemText, ListItemAvatar, Avatar, Box, Chip, Link, Divider } from '@mui/material';\nimport { getCourseLectures } from '../services/api'; // Assuming getCourseDetails exists\nimport LectureUpload from '../components/LectureUpload'; // Import the upload component\nimport AudiotrackIcon from '@mui/icons-material/Audiotrack';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport HourglassTopIcon from '@mui/icons-material/HourglassTop';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport PendingIcon from '@mui/icons-material/Pending';\nconst CourseDetailsPage = () => {\n  _s();\n  const {\n    courseId\n  } = useParams();\n  const [lectures, setLectures] = useState([]);\n  const [course, setCourse] = useState(null); // Optional: Fetch course details too\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchLectures = useCallback(async () => {\n    if (!courseId) {\n      setError(\"Course ID is missing.\");\n      setLoading(false);\n      return;\n    }\n    setLoading(true); // Show loading indicator on refresh\n    setError(null);\n    try {\n      // Optional: Fetch course details if needed\n      // const courseData = await getCourseDetails(courseId);\n      // setCourse(courseData);\n\n      const lecturesData = await getCourseLectures(courseId);\n      setLectures(lecturesData);\n    } catch (err) {\n      console.error(\"Failed to fetch lectures:\", err);\n      setError('Failed to load lectures. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  }, [courseId]);\n  useEffect(() => {\n    fetchLectures();\n  }, [fetchLectures]); // Use useCallback dependency\n\n  const getStatusChip = (status, isValidated) => {\n    if (isValidated) {\n      return <Chip icon={<CheckCircleIcon />} label=\"Validated\" color=\"success\" size=\"small\" variant=\"outlined\" />;\n    }\n    switch (status) {\n      case 'COMPLETED':\n        return <Chip icon={<CheckCircleIcon />} label=\"Ready for Review\" color=\"primary\" size=\"small\" variant=\"outlined\" />;\n      case 'IN_PROGRESS':\n        return <Chip icon={<HourglassTopIcon />} label=\"Processing\" color=\"warning\" size=\"small\" variant=\"outlined\" />;\n      case 'VALIDATED':\n        // Should be covered by isValidated, but as fallback\n        return <Chip icon={<CheckCircleIcon />} label=\"Validated\" color=\"success\" size=\"small\" variant=\"outlined\" />;\n      case 'ERROR':\n        return <Chip icon={<ErrorIcon />} label=\"Error\" color=\"error\" size=\"small\" variant=\"outlined\" />;\n      case 'NOT_STARTED':\n      default:\n        return <Chip icon={<PendingIcon />} label=\"Pending Upload\" color=\"default\" size=\"small\" variant=\"outlined\" />;\n    }\n  };\n  if (loading && lectures.length === 0) {\n    // Show loading only on initial load\n    return <Box sx={{\n      display: 'flex',\n      justifyContent: 'center',\n      mt: 5\n    }}>\n        <CircularProgress />\n      </Box>;\n  }\n  if (error) {\n    return <Alert severity=\"error\">{error}</Alert>;\n  }\n  return <Container>\n      {/* Display Course Name if fetched */}\n      <Typography variant=\"h4\" gutterBottom sx={{\n      mb: 3\n    }}>\n         Lectures {/* Replace with course?.courseName if fetched */}\n      </Typography>\n\n      {/* Lecture Upload Component */}\n      {courseId && <LectureUpload courseId={courseId} onUploadComplete={fetchLectures} />}\n\n       <Divider sx={{\n      my: 3\n    }} />\n\n      {/* Lectures List */}\n      {loading && <CircularProgress size={20} sx={{\n      display: 'block',\n      margin: 'auto'\n    }} />}\n      {!loading && lectures.length === 0 ? <Typography sx={{\n      mt: 2\n    }}>No lectures uploaded for this course yet.</Typography> : <List sx={{\n      width: '100%',\n      bgcolor: 'background.paper'\n    }}>\n          {lectures.map(lecture => <ListItem key={lecture.lectureID} secondaryAction={getStatusChip(lecture.summaryStatus, lecture.is_validated)} sx={{\n        borderBottom: '1px solid #eee'\n      }}>\n              <ListItemAvatar>\n                <Avatar>\n                  <AudiotrackIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={<Link component={RouterLink} to={`/lectures/${lecture.lectureID}/review`} underline=\"hover\">\n                        {lecture.lectureTitle}\n                    </Link>} secondary={`Uploaded: ${lecture.uploadDate ? new Date(lecture.uploadDate * 1000).toLocaleDateString() : 'N/A'} | Duration: ${lecture.duration ? Math.round(lecture.duration / 60) + ' min' : 'N/A'}`} />\n            </ListItem>)}\n        </List>}\n    </Container>;\n};\n_s(CourseDetailsPage, \"j9doEAuxz4L2AI3yMF7uWnfgZGI=\", false, function () {\n  return [useParams];\n});\n_c = CourseDetailsPage;\nexport default CourseDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"CourseDetailsPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/LectureUpload.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/LectureUpload.tsx\");\n  import.meta.hot.lastModified = \"1744588484083.4285\";\n}\n// REMIX HMR END\n\n// src/components/LectureUpload.tsx\nimport React, { useState, useRef } from 'react';\nimport { Button, Box, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, LinearProgress, Alert, CircularProgress } from '@mui/material';\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\nimport { createLectureRecord, uploadLectureAudio } from '../services/api';\nconst LectureUpload = ({\n  courseId,\n  onUploadComplete\n}) => {\n  _s();\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [lectureTitle, setLectureTitle] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0); // TODO: Implement progress reporting if API supports it\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const fileInputRef = useRef(null);\n  const handleFileChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n      // Basic validation (optional)\n      if (!file.type.startsWith('audio/')) {\n        setError(\"Please select an audio file.\");\n        setSelectedFile(null);\n        return;\n      }\n      // Size limit (e.g., 100MB)\n      if (file.size > 100 * 1024 * 1024) {\n        setError(\"File size exceeds 100MB limit.\");\n        setSelectedFile(null);\n        return;\n      }\n      setSelectedFile(file);\n      setError(null); // Clear previous error\n      setDialogOpen(true); // Open dialog to get title\n    }\n  };\n  const handleOpenDialog = () => {\n    // Trigger hidden file input click\n    fileInputRef.current?.click();\n  };\n  const handleCloseDialog = () => {\n    setDialogOpen(false);\n    setLectureTitle('');\n    setSelectedFile(null); // Reset file if dialog is cancelled\n  };\n  const handleUpload = async () => {\n    if (!selectedFile || !lectureTitle.trim()) {\n      setError('Please select a file and enter a title.');\n      return;\n    }\n    setUploading(true);\n    setError(null);\n    setSuccess(null);\n    setUploadProgress(0); // Reset progress\n\n    try {\n      // 1. Create lecture record\n      const newLecture = await createLectureRecord(courseId, lectureTitle);\n      console.log(\"Lecture record created:\", newLecture.lectureID);\n\n      // 2. Upload audio file\n      // Note: Axios doesn't easily support progress for basic fetch-like uploads.\n      // You might need a more complex setup or library for accurate progress.\n      // Simulating progress for now.\n      setUploadProgress(50); // Simulate progress\n      await uploadLectureAudio(courseId, newLecture.lectureID, selectedFile);\n      setUploadProgress(100); // Simulate completion\n\n      setSuccess(`Lecture \"${lectureTitle}\" uploaded successfully. Processing will start.`);\n      onUploadComplete(); // Refresh parent component's list\n      handleCloseDialog(); // Close dialog on success\n    } catch (err) {\n      console.error(\"Upload failed:\", err);\n      setError(`Upload failed: ${err.response?.data?.error || err.message || 'Unknown error'}`);\n      // Consider deleting the created lecture record if upload fails critically\n    } finally {\n      setUploading(false);\n      // Reset file input value so the same file can be selected again if needed\n      if (fileInputRef.current) {\n        fileInputRef.current.value = \"\";\n      }\n    }\n  };\n  return <Box sx={{\n    mt: 3,\n    mb: 2,\n    p: 2,\n    border: '1px dashed grey',\n    borderRadius: 1,\n    textAlign: 'center'\n  }}>\n      <input type=\"file\" accept=\"audio/*\" ref={fileInputRef} onChange={handleFileChange} style={{\n      display: 'none'\n    }} // Hide the default input\n    id=\"audio-upload-input\" />\n      <Button variant=\"outlined\" component=\"label\" // Link button to file input\n    startIcon={<UploadFileIcon />} onClick={handleOpenDialog} // Use onClick to trigger ref click\n    disabled={uploading} htmlFor=\"audio-upload-input\" // Necessary for label association\n    >\n        Upload New Lecture Audio\n      </Button>\n\n      {uploading && <LinearProgress variant=\"determinate\" value={uploadProgress} sx={{\n      mt: 2\n    }} />}\n      {error && <Alert severity=\"error\" sx={{\n      mt: 2\n    }}>{error}</Alert>}\n      {success && <Alert severity=\"success\" sx={{\n      mt: 2\n    }}>{success}</Alert>}\n\n      <Dialog open={dialogOpen} onClose={handleCloseDialog}>\n        <DialogTitle>Enter Lecture Title</DialogTitle>\n        <DialogContent>\n          <DialogContentText sx={{\n          mb: 2\n        }}>\n            Please provide a title for the lecture audio: \"{selectedFile?.name}\".\n          </DialogContentText>\n          <TextField autoFocus margin=\"dense\" id=\"lectureTitle\" label=\"Lecture Title\" type=\"text\" fullWidth variant=\"standard\" value={lectureTitle} onChange={e => setLectureTitle(e.target.value)} required />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} disabled={uploading}>Cancel</Button>\n          <Button onClick={handleUpload} disabled={uploading || !lectureTitle.trim()}>\n            {uploading ? <CircularProgress size={24} /> : 'Upload'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>;\n};\n_s(LectureUpload, \"wqfI5QpUKGbUtTa0S/Loi1nxOTY=\");\n_c = LectureUpload;\nexport default LectureUpload;\nvar _c;\n$RefreshReg$(_c, \"LectureUpload\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8zm4 18H6V4h7v5h5zM8 15.01l1.41 1.41L11 14.84V19h2v-4.16l1.59 1.59L16 15.01 12.01 11z\"\n}), 'UploadFile');", "\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 3v9.28c-.47-.17-.97-.28-1.5-.28C8.01 12 6 14.01 6 16.5S8.01 21 10.5 21c2.31 0 4.2-1.75 4.45-4H15V6h4V3z\"\n}), 'Audiotrack');", "\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2M7 13.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5m5 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5m5 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5\"\n}), 'Pending');", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/courses.$courseId.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/courses.$courseId.tsx\");\n  import.meta.hot.lastModified = \"1744599681845.3167\";\n}\n// REMIX HMR END\n\nimport CourseDetailsPage from '~/pages/CourseDetailsPage';\nimport { useAuth } from '~/contexts/AuthContext';\nimport { Navigate } from 'react-router-dom';\nimport { Box, CircularProgress } from '@mui/material';\n\n// Protection within the route component (alternative to layout routes)\nexport default function CourseDetailsRoute() {\n  _s();\n  const {\n    currentUser,\n    loading\n  } = useAuth();\n  if (loading) {\n    return <Box sx={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '50vh'\n    }}>\n               <CircularProgress />\n           </Box>;\n  }\n  if (!currentUser) {\n    return <Navigate to=\"/login\" replace />;\n  }\n  return <CourseDetailsPage />;\n}\n_s(CourseDetailsRoute, \"+loUN5XsQVjYs/gtfuWkb9VBZ7Q=\", false, function () {\n  return [useAuth];\n});\n_c = CourseDetailsRoute;\nvar _c;\n$RefreshReg$(_c, \"CourseDetailsRoute\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "_jsx", "import_jsx_runtime", "_jsx", "import_jsx_runtime", "_jsx", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c"]
}
