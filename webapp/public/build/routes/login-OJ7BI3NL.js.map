{
  "version": 3,
  "sources": ["../../../app/pages/LoginPage.tsx", "../../../node_modules/@mui/icons-material/esm/Google.js", "../../../app/routes/login.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/pages/LoginPage.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/pages/LoginPage.tsx\");\n  import.meta.hot.lastModified = \"1744588192691.599\";\n}\n// REMIX HMR END\n\n// src/pages/LoginPage.tsx\nimport React, { useState, useEffect } from 'react';\nimport { GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { authInstance } from '../utils/firebase';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, Container, Paper, Typography, CircularProgress } from '@mui/material';\nimport GoogleIcon from '@mui/icons-material/Google';\nconst LoginPage = () => {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // If user is already logged in, redirect to dashboard\n    if (currentUser) {\n      navigate('/');\n    }\n  }, [currentUser, navigate]);\n  const handleGoogleSignIn = async () => {\n    setLoading(true);\n    setError(null);\n    const provider = new GoogleAuthProvider();\n    try {\n      await signInWithPopup(authInstance, provider);\n      // Auth listener in AuthContext will handle redirect\n      // navigate('/'); // No need to navigate here, listener does it\n    } catch (err) {\n      console.error(\"Google Sign-In Error:\", err);\n      setError(\"Failed to sign in with Google. Please try again.\");\n      setLoading(false);\n    }\n    // setLoading will be set to false by the auth listener finishing\n  };\n\n  // Prevent rendering the login button if already logged in and redirecting\n  if (currentUser) {\n    return <Container component=\"main\" maxWidth=\"xs\" sx={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '80vh'\n    }}>\n              <CircularProgress />\n          </Container>;\n  }\n  return <Container component=\"main\" maxWidth=\"xs\">\n      <Paper elevation={3} sx={{\n      marginTop: 8,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: 4\n    }}>\n        <Typography component=\"h1\" variant=\"h5\" sx={{\n        mb: 3\n      }}>\n          Instructor Sign In\n        </Typography>\n        {error && <Typography color=\"error\" sx={{\n        mb: 2\n      }}>\n            {error}\n          </Typography>}\n        <Button type=\"button\" fullWidth variant=\"contained\" sx={{\n        mt: 1,\n        mb: 2\n      }} startIcon={<GoogleIcon />} onClick={handleGoogleSignIn} disabled={loading}>\n          {loading ? <CircularProgress size={24} color=\"inherit\" /> : 'Sign In with Google'}\n        </Button>\n      </Paper>\n    </Container>;\n};\n_s(LoginPage, \"dVK36GXwn6zi3N+b2cKJwUpPuUY=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12.545,10.239v3.821h5.445c-0.712,2.315-2.647,3.972-5.445,3.972c-3.332,0-6.033-2.701-6.033-6.032s2.701-6.032,6.033-6.032c1.498,0,2.866,0.549,3.921,1.453l2.814-2.814C17.503,2.988,15.139,2,12.545,2C7.021,2,2.543,6.477,2.543,12s4.478,10,10.002,10c8.396,0,10.249-7.85,9.426-11.748L12.545,10.239z\"\n}), 'Google');", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/login.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/login.tsx\");\n  import.meta.hot.lastModified = \"1744599595163.4321\";\n}\n// REMIX HMR END\n\nimport LoginPage from '~/pages/LoginPage'; // Use ~ alias for app root\n\nexport default function LoginRoute() {\n  return <LoginPage />;\n}\n_c = LoginRoute;\nvar _c;\n$RefreshReg$(_c, \"LoginRoute\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["_jsx", "import_jsx_dev_runtime", "_c"]
}
